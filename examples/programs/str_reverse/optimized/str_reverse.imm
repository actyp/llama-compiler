; ModuleID = 'llama'
source_filename = "llama"

@display_array = local_unnamed_addr global [2 x i8*] zeroinitializer
@0 = private unnamed_addr constant [33 x i8] c"Runtime Error: Division by zero\0A\00", align 1
@1 = private unnamed_addr constant [54 x i8] c"Runtime Error: Out of bounds error in array ref call\0A\00", align 1
@2 = private unnamed_addr constant [14 x i8] c"\0A!dlrow olleH\00", align 1

declare i1 @lla_print_string({ i8*, i64 }*) local_unnamed_addr

declare i64 @lla_strlen({ i8*, i64 }*) local_unnamed_addr

declare i1 @lla_exit_with_error({ i8*, i64 }*, i64) local_unnamed_addr

declare i8* @GC_init() local_unnamed_addr

declare i8* @GC_malloc(i64) local_unnamed_addr

declare void @GC_register_finalizer(i8*, void (i8*, i8*)*, i8*, void (i8*, i8*)**, i8**) local_unnamed_addr

define void @_free_array_of_malloc(i8* nocapture readonly %0, i8* nocapture readnone %1) {
  %3 = bitcast i8* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  tail call void @free(i8* %4)
  ret void
}

declare void @free(i8*) local_unnamed_addr

define void @_runtime_error(i8* %0, i64 %1) local_unnamed_addr {
  %3 = tail call i8* @GC_malloc(i64 16)
  tail call void @GC_register_finalizer(i8* %3, void (i8*, i8*)* nonnull @_free_array_of_malloc, i8* null, void (i8*, i8*)** null, i8** null)
  %4 = bitcast i8* %3 to { i8*, i64 }*
  %5 = bitcast i8* %3 to i8**
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 %1, i64* %7, align 4
  %8 = tail call i1 @lla_exit_with_error({ i8*, i64 }* %4, i64 1)
  ret void
}

define i64 @_binary_int_division(i64 %0, i64 %1) local_unnamed_addr {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %.preheader, label %11

.preheader:                                       ; preds = %2
  br label %4

4:                                                ; preds = %.preheader, %4
  %5 = tail call i8* @GC_malloc(i64 16)
  tail call void @GC_register_finalizer(i8* %5, void (i8*, i8*)* nonnull @_free_array_of_malloc, i8* null, void (i8*, i8*)** null, i8** null)
  %6 = bitcast i8* %5 to { i8*, i64 }*
  %7 = bitcast i8* %5 to i8**
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @0, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i64*
  store i64 33, i64* %9, align 4
  %10 = tail call i1 @lla_exit_with_error({ i8*, i64 }* %6, i64 1)
  br label %4

11:                                               ; preds = %2
  %12 = sdiv i64 %0, %1
  ret i64 %12
}

define float @_binary_float_division(float %0, float %1) local_unnamed_addr {
  %3 = fcmp oeq float %1, 0.000000e+00
  br i1 %3, label %.preheader, label %11

.preheader:                                       ; preds = %2
  br label %4

4:                                                ; preds = %.preheader, %4
  %5 = tail call i8* @GC_malloc(i64 16)
  tail call void @GC_register_finalizer(i8* %5, void (i8*, i8*)* nonnull @_free_array_of_malloc, i8* null, void (i8*, i8*)** null, i8** null)
  %6 = bitcast i8* %5 to { i8*, i64 }*
  %7 = bitcast i8* %5 to i8**
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @0, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i64*
  store i64 33, i64* %9, align 4
  %10 = tail call i1 @lla_exit_with_error({ i8*, i64 }* %6, i64 1)
  br label %4

11:                                               ; preds = %2
  %12 = fdiv float %0, %1
  ret float %12
}

define i64 @main() local_unnamed_addr {
  %1 = alloca {}, align 8
  %2 = tail call i8* @GC_init()
  %3 = load i8*, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @display_array, i64 0, i64 0), align 8
  store {}* %1, {}** bitcast ([2 x i8*]* @display_array to {}**), align 8
  %4 = tail call dereferenceable_or_null(20) i8* @malloc(i32 20)
  %5 = call i8* @GC_malloc(i64 16)
  call void @GC_register_finalizer(i8* %5, void (i8*, i8*)* nonnull @_free_array_of_malloc, i8* null, void (i8*, i8*)** null, i8** null)
  %6 = bitcast i8* %5 to { i8*, i64 }*
  %7 = bitcast i8* %5 to i8**
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i64*
  store i64 20, i64* %9, align 4
  %10 = call i8* @GC_malloc(i64 16)
  call void @GC_register_finalizer(i8* %10, void (i8*, i8*)* nonnull @_free_array_of_malloc, i8* null, void (i8*, i8*)** null, i8** null)
  %11 = bitcast i8* %10 to { i8*, i64 }*
  %12 = bitcast i8* %10 to i8**
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @2, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i64*
  store i64 14, i64* %14, align 4
  %15 = call i1 @"fn1:reverse"({ i8*, i64 }* %11, { i8*, i64 }* %6)
  %16 = call i1 @lla_print_string({ i8*, i64 }* %6)
  store i8* %3, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @display_array, i64 0, i64 0), align 8
  ret i64 0
}

define i1 @"fn1:reverse"({ i8*, i64 }* %0, { i8*, i64 }* %1) local_unnamed_addr {
  %3 = alloca {}, align 8
  %.reg2mem = alloca i64, align 8
  %.reg2mem50 = alloca i64, align 8
  %.reg2mem54 = alloca i64, align 8
  %.reg2mem59 = alloca i8**, align 8
  %.reg2mem61 = alloca i8**, align 8
  %.reg2mem63 = alloca i64*, align 8
  %.reg2mem65 = alloca i64*, align 8
  %.reg2mem67 = alloca i64, align 8
  %.reg2mem70 = alloca i64, align 8
  %.reg2mem76 = alloca i8*, align 8
  %.reg2mem78 = alloca i64, align 8
  %4 = load i8*, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @display_array, i64 0, i64 1), align 8
  store i8* %4, i8** %.reg2mem76, align 8
  store {}* %3, {}** bitcast (i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @display_array, i64 0, i64 1) to {}**), align 8
  %5 = call i64 @lla_strlen({ i8*, i64 }* %0)
  store i64 %5, i64* %.reg2mem70, align 4
  %6 = add i64 %5, -1
  store i64 %6, i64* %.reg2mem67, align 4
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i64 0, i32 1
  store i64* %7, i64** %.reg2mem65, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i64 0, i32 1
  store i64* %8, i64** %.reg2mem63, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i64 0, i32 0
  store i8** %9, i8*** %.reg2mem61, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i64 0, i32 0
  store i8** %10, i8*** %.reg2mem59, align 8
  %.reload68 = load i64, i64* %.reg2mem67, align 4
  %.not46 = icmp sgt i64 0, %.reload68
  br i1 %.not46, label %._crit_edge47, label %.lr.ph

._crit_edge47:                                    ; preds = %2
  br label %42

.lr.ph:                                           ; preds = %2
  store i64 0, i64* %.reg2mem78, align 4
  br label %11

11:                                               ; preds = %._crit_edge48, %.lr.ph
  %.reload79 = load i64, i64* %.reg2mem78, align 4
  store i64 %.reload79, i64* %.reg2mem54, align 4
  %.reload66 = load i64*, i64** %.reg2mem65, align 8
  %12 = load i64, i64* %.reload66, align 4
  %13 = icmp slt i64 %.reload79, %12
  br i1 %13, label %21, label %.preheader44

.preheader44:                                     ; preds = %11
  br label %14

14:                                               ; preds = %.preheader44, %14
  %15 = call i8* @GC_malloc(i64 16)
  call void @GC_register_finalizer(i8* %15, void (i8*, i8*)* nonnull @_free_array_of_malloc, i8* null, void (i8*, i8*)** null, i8** null)
  %16 = bitcast i8* %15 to { i8*, i64 }*
  %17 = bitcast i8* %15 to i8**
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @1, i64 0, i64 0), i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 8
  %19 = bitcast i8* %18 to i64*
  store i64 54, i64* %19, align 4
  %20 = call i1 @lla_exit_with_error({ i8*, i64 }* %16, i64 1)
  br label %14

21:                                               ; preds = %11
  %22 = xor i64 %.reload79, -1
  %.reload71 = load i64, i64* %.reg2mem70, align 4
  %23 = add i64 %22, %.reload71
  store i64 %23, i64* %.reg2mem50, align 4
  %.reload64 = load i64*, i64** %.reg2mem63, align 8
  %24 = load i64, i64* %.reload64, align 4
  %25 = icmp sgt i64 %23, -1
  %26 = icmp slt i64 %23, %24
  %27 = and i1 %25, %26
  br i1 %27, label %35, label %.preheader

.preheader:                                       ; preds = %21
  br label %28

28:                                               ; preds = %.preheader, %28
  %29 = call i8* @GC_malloc(i64 16)
  call void @GC_register_finalizer(i8* %29, void (i8*, i8*)* nonnull @_free_array_of_malloc, i8* null, void (i8*, i8*)** null, i8** null)
  %30 = bitcast i8* %29 to { i8*, i64 }*
  %31 = bitcast i8* %29 to i8**
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @1, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %29, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 54, i64* %33, align 4
  %34 = call i1 @lla_exit_with_error({ i8*, i64 }* %30, i64 1)
  br label %28

35:                                               ; preds = %21
  %.reload62 = load i8**, i8*** %.reg2mem61, align 8
  %36 = load i8*, i8** %.reload62, align 8
  %.reload56 = load i64, i64* %.reg2mem54, align 4
  %37 = getelementptr i8, i8* %36, i64 %.reload56
  %.reload60 = load i8**, i8*** %.reg2mem59, align 8
  %38 = load i8*, i8** %.reload60, align 8
  %39 = getelementptr i8, i8* %38, i64 %23
  %40 = load i8, i8* %39, align 1
  store i8 %40, i8* %37, align 1
  %.reload55 = load i64, i64* %.reg2mem54, align 4
  %41 = add nuw i64 %.reload55, 1
  store i64 %41, i64* %.reg2mem, align 4
  %.reload69 = load i64, i64* %.reg2mem67, align 4
  %.not = icmp sgt i64 %41, %.reload69
  br i1 %.not, label %._crit_edge, label %._crit_edge48

._crit_edge48:                                    ; preds = %35
  store i64 %41, i64* %.reg2mem78, align 4
  br label %11

._crit_edge:                                      ; preds = %35
  br label %42

42:                                               ; preds = %._crit_edge47, %._crit_edge
  %43 = load i64, i64* %7, align 4
  %.reload72 = load i64, i64* %.reg2mem70, align 4
  %44 = icmp sgt i64 %.reload72, -1
  %45 = icmp slt i64 %.reload72, %43
  %46 = and i1 %44, %45
  br i1 %46, label %54, label %.preheader45

.preheader45:                                     ; preds = %42
  br label %47

47:                                               ; preds = %.preheader45, %47
  %48 = call i8* @GC_malloc(i64 16)
  call void @GC_register_finalizer(i8* %48, void (i8*, i8*)* nonnull @_free_array_of_malloc, i8* null, void (i8*, i8*)** null, i8** null)
  %49 = bitcast i8* %48 to { i8*, i64 }*
  %50 = bitcast i8* %48 to i8**
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @1, i64 0, i64 0), i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %48, i64 8
  %52 = bitcast i8* %51 to i64*
  store i64 54, i64* %52, align 4
  %53 = call i1 @lla_exit_with_error({ i8*, i64 }* %49, i64 1)
  br label %47

54:                                               ; preds = %42
  %55 = load i8*, i8** %9, align 8
  %56 = getelementptr i8, i8* %55, i64 %.reload72
  store i8 0, i8* %56, align 1
  %.reload77 = load i8*, i8** %.reg2mem76, align 8
  store i8* %.reload77, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @display_array, i64 0, i64 1), align 8
  ret i1 false
}

declare noalias i8* @malloc(i32) local_unnamed_addr
